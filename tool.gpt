export: browse, summarize, click, fill, check, select, enter, login
description: A toolset that can be used to browse and navigate websites. This tool is capable of following links, filling out forms, clicking buttons, and other basic web browsing functionality. It can also reuse your existing browser session (allowing you to navigate to websites that you manually logged into) if you add the following to your prompt: "Reuse existing browser userdata and session."

---
name: browse
description: browse website. Reuse session id from user inputs if possible.
args: website: the website url to browse. The url should have https protocol prepend.
args: sessionID: id of an existing session. optional but don't provide this arg unless user specifically provides one.
args: headless: Whether to launch actual browser. Provide true if it is specifically asked to not launch a browser. Alse provide false.
tools: service

#!http://service.daemon.gptscript.local/browse

---
name: summarize
description: summarize the current webpage. Reuse session id from user inputs if possible. Only use this tool if user want to know more information about the current website.
args: sessionID: id of an existing session. optional but don't provide this arg unless user specifically provides one.
args: headless: Whether to launch actual browser. Provide true if it is specifically asked to not launch a browser. Alse provide false.
tools: service

#!http://service.daemon.gptscript.local/summarize

---
name: login
description: login a website.
args: website: the website url to browse. The url should have https protocol prepend.
args: sessionID: id of an existing session. optional but don't provide this arg unless user specifically provides one.
tools: service

#!http://service.daemon.gptscript.local/login

---
name: click
description: Click buttons from website.
args: sessionID: id of an existing session. optional but don't provide this arg unless user specifically provides one.
args: userInput: the element description to look for. This is a required input parameter for the API function, which must be explicitly provided by ChatGPT in the request. Failure to include this parameter, or providing an invalid value, will result in an error or failure in the execution of the API call.
args: keywords: A list of keywords about the element, separated by comma. This is a required input parameter for the API function, which must be explicitly provided by ChatGPT in the request. Failure to include this parameter, or providing an invalid value, will result in an error or failure in the execution of the API call.
tools: service

#!http://service.daemon.gptscript.local/click

---
name: fill
description: fill text content into website.
args: userInput: the element description to look for
args: content: content to fill in
args: sessionID: id of an existing session. optional but don't provide this arg unless user specifically provides one.
args: keywords: A list of keywords about the element, separated by comma. This is a required input parameter for the API function, which must be explicitly provided by ChatGPT in the request. Failure to include this parameter, or providing an invalid value, will result in an error or failure in the execution of the API call.
tools: service

#!http://service.daemon.gptscript.local/fill

---
name: enter
description: Only invoke when user specifically ask to press certain keyboard input to the current page. Provide keyboard input into current page based on user instruction.
args: input: the keyboard input.
args: sessionID: id of an existing session. optional but don't provide this arg unless user specifically provides one.
tools: service

#!http://service.daemon.gptscript.local/enter

---
name: check
description: check radio button input
args: userInput: the instruction to find the element based on user description
args: sessionID: id of an existing session. optional but don't provide this arg unless user specifically provides one.
args: keywords: A list of keywords about the element, separated by comma. This is a required input parameter for the API function, which must be explicitly provided by ChatGPT in the request. Failure to include this parameter, or providing an invalid value, will result in an error or failure in the execution of the API call.
tools: service

#!http://service.daemon.gptscript.local/check

---
name: select
description: select input from dropdown
args: userInput: the element description to look for
args: sessionID: id of an existing session. optional but don't provide this arg unless user specifically provides one.
args: option: option to choose from dropdown
tools: service

#!http://service.daemon.gptscript.local/select

---
name: service

#!sys.daemon /usr/bin/env npm --prefix ${GPTSCRIPT_TOOL_DIR} run server
